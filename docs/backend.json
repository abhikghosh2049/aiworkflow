{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the AI Workflow Hub.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "name",
        "createdAt"
      ]
    },
    "Summary": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Summary",
      "type": "object",
      "description": "Represents a summary generated by the AI workflow.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Summary entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Summary)"
        },
        "title": {
          "type": "string",
          "description": "Title of the summary."
        },
        "content": {
          "type": "string",
          "description": "The summarized content."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the summary was created.",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "description": "Timestamp indicating when the summary was last modified.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "content",
        "createdAt",
        "modifiedAt"
      ]
    },
    "Insight": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Insight",
      "type": "object",
      "description": "Represents an insight generated from a summary.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Insight entity."
        },
        "summaryId": {
          "type": "string",
          "description": "Reference to Summary. (Relationship: Summary 1:N Insight)"
        },
        "content": {
          "type": "string",
          "description": "The generated insight."
        },
        "relevanceScore": {
          "type": "number",
          "description": "A score indicating the relevance or importance of the insight."
        }
      },
      "required": [
        "id",
        "summaryId",
        "content",
        "relevanceScore"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. User ID is used as the document ID. ",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/summaries/{summaryId}",
        "definition": {
          "entityName": "Summary",
          "schema": {
            "$ref": "#/backend/entities/Summary"
          },
          "description": "Stores summaries created by the user. User ID is used to create a user-owned path and summary ID as document ID.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "summaryId",
              "description": "The unique identifier of the summary."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/summaries/{summaryId}/insights/{insightId}",
        "definition": {
          "entityName": "Insight",
          "schema": {
            "$ref": "#/backend/entities/Insight"
          },
          "description": "Stores insights generated from a summary. It is nested in a hierarchical structure /users/{userId}/summaries/{summaryId}/insights/{insightId}.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "summaryId",
              "description": "The unique identifier of the summary."
            },
            {
              "name": "insightId",
              "description": "The unique identifier of the insight."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to be secure, scalable, and easily debuggable, adhering to the core principles of Authorization Independence, Clarity of Intent, DBAC (Database-Based Access Control), and QAPs (Rules are not Filters). It emphasizes denormalization to avoid hierarchical authorization dependencies (`get()` calls), ensuring atomic operations and simplified security rules. The structure segregates data based on access needs and uses consistent patterns for authorization (path-based ownership). \n\nUsers have private data at `/users/{userId}`. Summaries and Insights are organized under user-owned paths. Summaries are located at `/users/{userId}/summaries/{summaryId}`, and insights are nested under their corresponding summaries at `/users/{userId}/summaries/{summaryId}/insights/{insightId}`.\n\nThis design supports the required QAPs. Because private user data is stored under `/users/{userId}`, list operations are secure as rules can easily check `request.auth.uid == userId`. Data segregation by user ensures that only the currently authenticated user can access their respective summaries and insights. This structure allows for simple and secure list operations, as the rules only need to verify the user ID in the path. The use of hierarchical paths for user-owned data (`/users/{userId}/summaries/{summaryId}/insights/{insightId}`) simplifies ownership-based security rules."
  }
}